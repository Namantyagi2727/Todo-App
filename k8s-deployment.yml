apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-app
spec:
apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-app
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: todo-app
  template:
    metadata:
      labels:
        app: todo-app
    spec:
      containers:
      - name: flask-app
        image: namantyagi10/todo-app:v2  # Replace with your Docker Hub image
        ports:
        - containerPort: 5000
      - name: mongo
        image: mongo
        ports:
        - containerPort: 27017
        volumeMounts:
        - mountPath: /data/db
          name: mongo-storage
      volumes:
        - name: mongo-storage
          emptyDir: {}
          apiVersion: apps/v1
kind: Deployment
metadata:
  name: todo-app
spec:
  replicas: 2
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
      maxSurge: 1
  selector:
    matchLabels:
      app: todo-app
  template:
    metadata:
      labels:
        app: todo-app
    spec:
      containers:
      - name: flask-app
        image: username/todo-app:latest
        ports:
        - containerPort: 5000
        livenessProbe:
          httpGet:
            path: /todos
            port: 5000
          initialDelaySeconds: 10
          periodSeconds: 5
        readinessProbe:
          httpGet:
            path: /todos
            port: 5000
          initialDelaySeconds: 5
          periodSeconds: 5
      - name: mongo
        image: mongo
        ports:
        - containerPort: 27017
        volumeMounts:
        - mountPath: /data/db
          name: mongo-storage
      volumes:
        - name: mongo-storage
          emptyDir: {}
  replicas: 2
  selector:
    matchLabels:
      app: todo-app
  template:
    metadata:
      labels:
        app: todo-app
    spec:
      containers:
      - name: flask-app
        image: namantyagi10/todo-app:v2  # Replace with your Docker Hub username and image name
        ports:
        - containerPort: 5000
      - name: mongo
        image: mongo
        ports:
        - containerPort: 27017
        volumeMounts:
        - mountPath: /data/db
          name: mongo-storage
      volumes:
        - name: mongo-storage
          emptyDir: {}
